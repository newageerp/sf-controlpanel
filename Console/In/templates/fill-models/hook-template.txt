import { useEffect } from "react";
import { NaeSSchemaMap } from "../../config/NaeSSchema";
import { useDataCache } from "./DataCacheProvider";
import { useSelector } from "react-redux";
import { Selector|MODELNAME|Nae } from "../Models/ormSelectors";

interface ChildId {
  id: number
}

export interface I|MODELNAME|ModelNae {
    |MODELFIELDSSTRUCT|
}

export const I|MODELNAME|FieldsNae = |MODELFIELDSARRAY|;

export function use|MODELNAME|HookNae(id: number) : I|MODELNAME|ModelNae {
  // @ts-ignore
  const element = useSelector((state) => Selector|MODELNAME|Nae(state, id));

  const { addToQueue } = useDataCache();

  useEffect(() => {
    if (!element) {
      addToQueue({
        elementId: id,
        schema: NaeSSchemaMap.|MODELNAME|.schema,
        fields: I|MODELNAME|FieldsNae,
      });
    }
  }, [element, id]);

  return element;
}
