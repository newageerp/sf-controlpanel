import React from "react";
import { Table, Td, Th } from "@newageerp/ui.table.base.table";
import { useTranslation } from "react-i18next";
import { Icon, IconType } from '@newageerp/ui.icons.base.icon'
import { IconList } from '@newageerp/ui.icons.base.icon-list'
import { OpenApi } from "@newageerp/nae-react-auth-wrapper";
TP_IMPORT

interface Props {
    data: any,
    doReload: () => void,
}

export default function TP_COMP_NAME(props: Props) {
    const { data } = props;
    const { t } = useTranslation();

    const [doRemove] = OpenApi.useURequest('NAEURemoveMultiple');

    const [selectedIds, setSelectedIds] = useState<number[]>([]);

    const toggleSelect = (id: number) => {
        const _selected: number[] = JSON.parse(JSON.stringify(selectedIds));
        if (selectedIds.indexOf(id) >= 0) {
            setSelectedIds(_selected.filter(i => id !== i));
        } else {
            setSelectedIds([..._selected, id]);
        }
    }

    const doMultipleRemove = () => {
        doRemove({
            ids: selectedIds
        }).then(() => {
            setSelectedIds([]);
            props.doReload();
        })
    }

    return (
    <Fragment>
        {selectedIds.length > 0 && <div className={`tw3-flex tw3-gap-6 ${TwTextColors.slate400}`}>
            <p>{t('Pažymėta')}: {selectedIds.length}</p>
            <button onClick={doMultipleRemove} className={`${TwTextColors.sky600Hover}`}><Icon type={IconType.Solid} icon={IconList.trash} /></button>
        </div>}
        <Table
            thead={
                <thead>
                    <tr>
                        TP_THEAD
                    </tr>
                </thead>
            }
            tbody={
                <tbody>
                    {data.map((item: any) => {
                        TP_ROW_DATA
                        return (
                            <tr key={`row-${item?.id}`}>
                                TP_TBODY
                            </tr>
                        )
                    })}
                </tbody>
            }
        />
    </Fragment>
    )
}