import React, { Fragment } from "react";
import { BrowserRouter as Router, Route, Switch } from "react-router-dom";
import DefaultEditRouteWrapper from "./wrappers/DefaultEditRouteWrapper";
{% for import in imports %}
    {{ import|raw }}
{% endfor %}
import { UI } from "@newageerp/nae-react-ui";


export function AppsRoutes() {
    return (
        <Fragment>
            {% for component in appsComponents %}
                <Route path={"/c/apps/{{ component.name}}"}>
                    <{{ component.compName }} />
                </Route>
            {% endfor %}
        </Fragment>
    )
}

export function ListRoutes() {
    return (
        <Fragment>
            {% for component in listComponents %}
                <Route path={"/u/{{ component.schema }}/{{ component.type }}/list/"}>
                    <{{ component.compName }} />
                </Route>
            {% endfor %}
        </Fragment>
    )
}

export function EditRoutes() {
    return (
        <Fragment>
            {% for component in editComponents %}
                <Route path={"/u/{{ component.schema }}/{{ component.type }}/edit/:id"}>
                    <DefaultEditRouteWrapper
                            render={
                            (
                            id: string,
                            onSave: (element: any, isNew: boolean, schema: string) => void,
                        onCancel: () => void,
                        ) => <{{ component.compName }} id={id} onSave={onSave} onCancel={onCancel} />
                        }
                        />
                </Route>
            {% endfor %}
        </Fragment>
    )
}

export function ViewRoutes() {
    return (
        <Fragment>
            {% for component in viewComponents %}
                <Route path={"/u/{{ component.schema }}/{{ component.type }}/view/:id"}>
                    <UI.RoutePoints.View key={"{{ component.schema }}-{{ component.type }}"}/>
                </Route>
            {% endfor %}
        </Fragment>
    )
}

export default function AppRoutes() {
    return (
        <Fragment>
            <ListRoutes/>
            <EditRoutes/>
            <ViewRoutes/>
            <AppsRoutes/>
        </Fragment>
    )
}