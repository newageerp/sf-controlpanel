import React, { ReactNode, Fragment, useEffect } from 'react'
import { useHistory, useParams } from 'react-router-dom'
import { useRecoilState } from 'recoil'
import { UserSpaceWrapperToolbarState } from '../../layout/toolbar/UserSpaceWrapperToolbar'

interface Props {
    render: (
        id: string,
        onSave: (element: any, isNew: boolean, schema: string) => void,
        onCancel: () => void,
    ) => ReactNode,
    disableSetTitle?: boolean,
}

interface ParamTypes {
    id: string
}

export default function DefaultEditRouteWrapper(props: Props) {
    const [, setToolbarTitle] = useRecoilState(UserSpaceWrapperToolbarState)
    const history = useHistory()
    const routeParams = useParams<ParamTypes>()

    const onSave = (element: any, isNew: boolean, schema: string) => {
        if (isNew) {
            history.replace(`/u/${schema}/main/view/${element.id}`)
        } else {
            history.goBack()
        }
    }
    const onCancel = () => {
        history.goBack();
    }

    useEffect(() => {
        if (!props.disableSetTitle) {
            setToolbarTitle('{% if toolbarTitle != "" %}{{ toolbarTitle }}{% else %}{" "}{% endif %}');
        }
    }, []);

    return (
        <div className="mx-auto" style={ { maxWidth: 800 } }>{props.render(routeParams.id, onSave, onCancel)}</div>
    )
}
