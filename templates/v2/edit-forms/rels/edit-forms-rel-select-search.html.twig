import { UI } from "@newageerp/nae-react-ui";
import { SelectAdvData } from "@newageerp/ui.form.base.form-pack";
import React, { Fragment, useState } from 'react'
import { IconType } from "@newageerp/ui.icons.base.icon";
import { TwBackgroundColors } from "@newageerp/ui.styles.tailwind";
import { Popup } from "@newageerp/ui.popups.base.popup";
import {{ popupSelectRelType }} from "../../../../tabs/tables-data-source/{{ popupSelectRelType }}";
import { SquareButton } from "@newageerp/ui.buttons.base.square-button";

interface Props {
    selectedTitle?: string,
    selectedId: string,
    onSelectId: (e: any) => void,
    parentElement: any
}

export const {{ compName }} = (props: Props) => {
    const [showPopup, setShowPopup] = useState(false);

{% if allowCreateRel %}
    const { showEditPopup } = UI.Window.useNaeWindow();
    const onNew = () => {
        showEditPopup({
            newStateOptions: { 
                createOptions: {
                    convert: {
                        schema: "{{ schema }}",
                        element: props.parentElement,
                    }
                } 
            },
            id: 'new',
            schema: "{{ objectSchema }}",
            onSaveCallback: (el, backFunc) => {
                setReloadState(new Date().getTime());
                backFunc();
                props.onSelectId({id: el.id, _viewTitle: el._viewTitle});
            }
        })
    }
{% endif %}
    return (
        <Fragment>
            <div className="flex items-center gap-2">
                <p className={"flex-grow tw3-border tw3-text-slate-800 tw3-text-sm tw3-border-slate-300 tw3-rounded tw3-px-3 tw3-py-2"}>{props.selectedTitle}</p>
{% if allowCreateRel %}
                <span style={ {minWidth: 54, maxWidth: 54} }>
                    <SquareButton
                        icon={
                            {
                                icon: "plus",
                                type: IconType.Regular,
                            }
                        }
                        bgColor={TwBackgroundColors.white}
                        onClick={onNew}
                    />
                </span>
{% endif %}
                <span style={ {minWidth: 54, maxWidth: 54} }>
                    <SquareButton
                        icon={
                            {
                                icon: "search",
                                type: IconType.Regular,
                            }
                        }
                        bgColor={TwBackgroundColors.white}
                        onClick={() => setShowPopup(true)}
                    />
                </span>
            </div>
            {!!showPopup && <Popup onClose={() => setShowPopup(false)}>
                <{{ popupSelectRelType }} 
                    disableVerticalMargin={true} 
                    navigate={(schema: string, id: number | string, el: any) => {
                        setShowPopup(false);
                        props.onSelectId({id: el.id, _viewTitle: el._viewTitle});
                    }}
                    />
                </Popup>
                }
        </Fragment>
    )
}